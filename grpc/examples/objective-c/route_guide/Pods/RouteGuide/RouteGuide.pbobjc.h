// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: route_guide.proto

#import "GPBProtocolBuffers.h"

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30000
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

CF_EXTERN_C_BEGIN

@class RTGPoint;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - RTGRouteGuideRoot

@interface RTGRouteGuideRoot : GPBRootObject

// The base class provides:
//   + (GPBExtensionRegistry *)extensionRegistry;
// which is an GPBExtensionRegistry that includes all the extensions defined by
// this file and all files that it depends on.

@end

#pragma mark - RTGPoint

typedef GPB_ENUM(RTGPoint_FieldNumber) {
  RTGPoint_FieldNumber_Latitude = 1,
  RTGPoint_FieldNumber_Longitude = 2,
};

// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
@interface RTGPoint : GPBMessage

@property(nonatomic, readwrite) int32_t latitude;

@property(nonatomic, readwrite) int32_t longitude;

@end

#pragma mark - RTGRectangle

typedef GPB_ENUM(RTGRectangle_FieldNumber) {
  RTGRectangle_FieldNumber_Lo = 1,
  RTGRectangle_FieldNumber_Hi = 2,
};

// A latitude-longitude rectangle, represented as two diagonally opposite
// points "lo" and "hi".
@interface RTGRectangle : GPBMessage

// One corner of the rectangle.
@property(nonatomic, readwrite) BOOL hasLo;
@property(nonatomic, readwrite, strong, null_resettable) RTGPoint *lo;

// The other corner of the rectangle.
@property(nonatomic, readwrite) BOOL hasHi;
@property(nonatomic, readwrite, strong, null_resettable) RTGPoint *hi;

@end

#pragma mark - RTGFeature

typedef GPB_ENUM(RTGFeature_FieldNumber) {
  RTGFeature_FieldNumber_Name = 1,
  RTGFeature_FieldNumber_Location = 2,
};

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
@interface RTGFeature : GPBMessage

// The name of the feature.
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

// The point where the feature is detected.
@property(nonatomic, readwrite) BOOL hasLocation;
@property(nonatomic, readwrite, strong, null_resettable) RTGPoint *location;

@end

#pragma mark - RTGRouteNote

typedef GPB_ENUM(RTGRouteNote_FieldNumber) {
  RTGRouteNote_FieldNumber_Location = 1,
  RTGRouteNote_FieldNumber_Message = 2,
};

// A RouteNote is a message sent while at a given point.
@interface RTGRouteNote : GPBMessage

// The location from which the message is sent.
@property(nonatomic, readwrite) BOOL hasLocation;
@property(nonatomic, readwrite, strong, null_resettable) RTGPoint *location;

// The message to be sent.
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

@end

#pragma mark - RTGRouteSummary

typedef GPB_ENUM(RTGRouteSummary_FieldNumber) {
  RTGRouteSummary_FieldNumber_PointCount = 1,
  RTGRouteSummary_FieldNumber_FeatureCount = 2,
  RTGRouteSummary_FieldNumber_Distance = 3,
  RTGRouteSummary_FieldNumber_ElapsedTime = 4,
};

// A RouteSummary is received in response to a RecordRoute rpc.
//
// It contains the number of individual points received, the number of
// detected features, and the total distance covered as the cumulative sum of
// the distance between each point.
@interface RTGRouteSummary : GPBMessage

// The number of points received.
@property(nonatomic, readwrite) int32_t pointCount;

// The number of known features passed while traversing the route.
@property(nonatomic, readwrite) int32_t featureCount;

// The distance covered in metres.
@property(nonatomic, readwrite) int32_t distance;

// The duration of the traversal in seconds.
@property(nonatomic, readwrite) int32_t elapsedTime;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

// @@protoc_insertion_point(global_scope)
